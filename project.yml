name: AppTemplate
options:
  xcodeVersion: "15.0"
  deploymentTarget:
    macOS: "13.0"
  developmentLanguage: en

settings:
  base:
    SWIFT_VERSION: 5.0

packages:
  AppTemplateKit:
    path: ./AppTemplateKit
  AppTemplate:
    path: .
  Firebase:
    url: https://github.com/firebase/firebase-ios-sdk
    from: 11.0.0
  Sparkle:
    url: https://github.com/sparkle-project/Sparkle
    from: 2.6.4

targets:
  AppTemplate:
    type: application
    platform: macOS
    settings:
      base:
        PRODUCT_NAME: $TARGET_NAME
        ENABLE_PREVIEWS: true
        GENERATE_INFOPLIST_FILE: false
        ENABLE_USER_SCRIPT_SANDBOXING: false
        APP_SANDBOX: YES
        INFOPLIST_FILE: Info.plist
      configs:
        Debug:
          ENABLE_HARDENED_RUNTIME: YES
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG
          CODE_SIGN_ENTITLEMENTS: App_non_sandbox.entitlements
        release:
          ENABLE_HARDENED_RUNTIME: YES
          CODE_SIGN_ENTITLEMENTS: App_non_sandbox.entitlements
    sources:
      - path: ./App/MacOS
    dependencies:
      - sdk: StoreKit.framework
      - package: AppTemplateKit
        products:
          - AppTemplateKit
      - package: Firebase
        products:
          - FirebaseAnalytics
          - FirebaseCrashlytics
          - FirebaseFirestore
      - package: Sparkle
        products:
          - Sparkle

    postBuildScripts:
      - name: Run SwiftLint
        path: /bin/sh
        script: |-
          cd $SRCROOT/..

          make lint
      - name: Run Firebase
        path: /bin/sh
        script: |-
          "${BUILD_DIR%/Build/*}/SourcePackages/checkouts/firebase-ios-sdk/Crashlytics/run"
        inputFiles:
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${PRODUCT_NAME}
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist
          - $(TARGET_BUILD_DIR)/$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/GoogleService-Info.plist
          - $(TARGET_BUILD_DIR)/$(EXECUTABLE_PATH)

  AppTemplate_sandbox:
    type: application
    platform: macOS
    settings:
      base:
        PRODUCT_NAME: AppTemplate
        ENABLE_PREVIEWS: true
        GENERATE_INFOPLIST_FILE: false
        ENABLE_USER_SCRIPT_SANDBOXING: false
        APP_SANDBOX: YES
        INFOPLIST_FILE: Info.plist
      configs:
        Debug:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG APP_SANDBOX
          CODE_SIGN_ENTITLEMENTS: App.entitlements
          INFOPLIST_KEY_SUEnableInstallerLauncherService: true
        Release:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: APP_SANDBOX
          CODE_SIGN_ENTITLEMENTS: App.entitlements
          INFOPLIST_KEY_SUEnableInstallerLauncherService: true
    sources:
      - path: ./App/MacOS
    dependencies:
      - sdk: StoreKit.framework
      - package: AppTemplateKit
        products:
          - AppTemplateKit
      - package: Firebase
        products:
          - FirebaseAnalytics
          - FirebaseCrashlytics
          - FirebaseFirestore

    postBuildScripts:
      - name: Run SwiftLint
        path: /bin/sh
        script: |-
          cd $SRCROOT/..

          make lint
      - name: Run Firebase
        path: /bin/sh
        script: |-
          "${BUILD_DIR%/Build/*}/SourcePackages/checkouts/firebase-ios-sdk/Crashlytics/run"
        inputFiles:
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${PRODUCT_NAME}
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist
          - $(TARGET_BUILD_DIR)/$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/GoogleService-Info.plist
          - $(TARGET_BUILD_DIR)/$(EXECUTABLE_PATH)

schemes:
  AppTemplate:
    build:
      targets:
        AppTemplate: all
    run:
      config: Debug
    test:
      config: Debug
    profile:
      config: Debug
    analyze:
      config: Debug
    archive:
      config: Release
  AppTemplate_sandbox:
    build:
      targets:
        AppTemplate_sandbox: all
    run:
      config: Debug
    test:
      config: Debug
    profile:
      config: Debug
    analyze:
      config: Debug
    archive:
      config: Release
